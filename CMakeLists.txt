cmake_minimum_required(VERSION "3.28")

project("cpackexample" VERSION 0.1.0)

find_package(deal.II 9.5 REQUIRED
  HINTS ${DEAL_II_DIR} ../ ../../ $ENV{DEAL_II_DIR}
  )
DEAL_II_INITIALIZE_CACHED_VARIABLES()

# Uses the FindBoost module of CMake
find_package(Boost 1.83 COMPONENTS filesystem REQUIRED)

find_package(yaml-cpp 0.6 REQUIRED)

add_library(cpackexamplelib filesystem/filesystem.cpp fem/fem.cpp flatset/flatset.cpp yamlParser/yamlParser.cpp)
add_executable("${PROJECT_NAME}" main.cpp)

target_link_libraries("${PROJECT_NAME}" cpackexamplelib)
target_link_libraries(cpackexamplelib Boost::filesystem ${YAML_CPP_LIBRARIES})

set_target_properties(cpackexamplelib
  PROPERTIES
    PUBLIC_HEADER filesystem/filesystem.hpp
    PUBLIC_HEADER flatset/flatset.hpp
    PUBLIC_HEADER yamlParser/yamlParser.hpp
  )

DEAL_II_SETUP_TARGET("${PROJECT_NAME}")
DEAL_II_SETUP_TARGET(cpackexamplelib)

target_include_directories(cpackexamplelib
    PRIVATE
        ${CMAKE_CURRENT_SOURCE_DIR}/cpackexamplelib
    PUBLIC
        $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/cpackexamplelib>
        $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}/cpackexamplelib>
  )

target_link_libraries(cpackexample cpackexamplelib)
target_link_libraries(cpackexamplelib Boost::filesystem yaml-cpp)



include(GNUInstallDirs)

  install(TARGETS cpackexample cpackexamplelib
  LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
  ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
  RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
  PUBLIC_HEADER DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/cpackexample
  INCLUDES DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/cpackexample
  )

if(CMAKE_BUILD_TYPE STREQUAL "Release")
    add_custom_command(TARGET ${PROJECT_NAME} POST_BUILD
        COMMAND ${CMAKE_STRIP} $<TARGET_FILE:${PROJECT_NAME}>
        COMMENT "Stripping binary for Release configuration"
    )
endif()

set(COPYRIGHT_FILE ${CMAKE_SOURCE_DIR}/copyright)
install(FILES ${COPYRIGHT_FILE} DESTINATION "/usr/share/doc/${PROJECT_NAME}")

set(CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/cmake")
include(CPackConfig)  
